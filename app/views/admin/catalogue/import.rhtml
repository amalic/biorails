<%content_for :center do%>
<h2>
   Import Catalogue into System 
</h2> 
<div class='panel'>

<%form_tag({:action =>'import_file'} , {:multipart => true}) do %>

   <%= render :partial => '/shared/messages',  :locals => { :objects => ['data_context']} %>

   <div class="row">
     <div class="form-element">
       <label for="filename">Catalogue design file to import :-        
       </label>
          <%=file_field_tag(:file) %>  
     </div>        
   </div>        
  <div class="row">
    <div class="form-element">
       <label for="catalogue_name">New Name</label>
       <%= text_field_tag :name, nil , {:class=>"text-input"} %>
    </div>
   </div>        

  <div class="row">
    <h2 style="color:red"> BACKUP YOUR DATABASE NOW BEFORE ATTEMPTING THIS OPERATION</h2>
    <p>
    This operation will attempt to load a complete catalogue of terms into the system and 
	is designed as a method of <strong>seeding</strong> new systems rather than extending
	existing catalogues.  The load is done in a single database transaction so its all or nothing operation. 
   </p>
    
    <br />
    <%= submit_tag("Import")%>
  </div> 
  <% end %>

   </div>        
<% end%>

<% content_for :right do%>
<h2>Guide</h2>
<div class='panel'>
	<p>
		Importing a catalogue of terms into the BioRails context is also a simple mothod of setting up a <i>standard</i> system. 
		populating or seeding a new database that is not managed centrally.  
	</p>
	<p>
		A more advanced method of dictionary management is to have a central catalogue with <i>slave</i> operational instances.  This can be achieved through standard 
		catalogue integration methods.  Contact the <a href="info@edgesoftwareconsultancy.com">The Edge</a> for consultancy on this matter.
	</p>
</div>
<% end %>